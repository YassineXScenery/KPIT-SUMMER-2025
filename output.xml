<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.1 (Python 3.13.5 on win32)" generated="2025-07-03T12:30:53.006928" rpa="false" schemaversion="5">
<suite id="s1" name="Test" source="C:\Users\zones\Desktop\KPIT SUMMER\components\robot_tests\test_cases\test.robot">
<kw name="Connect To HMI Database" owner="keywords" type="SETUP">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2025-07-03T12:30:53.056644" level="INFO">Looking for configuration file: 'resources\db.cfg'</msg>
<msg time="2025-07-03T12:30:53.056738" level="INFO">Configuration file doesn't exist</msg>
<msg time="2025-07-03T12:30:53.074862" level="INFO">Connect to DB using : pymysql.connect(db='iot_system', user='user', passwd=***, host='10.20.0.2', port=3306, charset='utf8mb4')</msg>
<arg>pymysql</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASS}</arg>
<arg>${DB_HOST}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2025-07-03T12:30:53.056366" elapsed="0.141519"/>
</kw>
<doc>Connexion à la base de données iot_system</doc>
<status status="PASS" start="2025-07-03T12:30:53.055793" elapsed="0.142217"/>
</kw>
<test id="s1-t1" name="Verify LED Initial State Is Off" line="14">
<kw name="Query LED State From DB" owner="keywords">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2025-07-03T12:30:53.198964" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT value FROM signals_log WHERE signal_name='led' ORDER BY timestamp DESC LIMIT 1&lt;/code&gt;</msg>
<msg time="2025-07-03T12:30:53.209696" level="INFO">Commit the transaction</msg>
<msg time="2025-07-03T12:30:53.222531" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="color:black; background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;value&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: var(--secondary-color, #eee)"&gt;&lt;th scope="row" style="color:black; background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;off&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2025-07-03T12:30:53.222717" level="INFO">${result} = (('off',),)</msg>
<var>${result}</var>
<arg>SELECT value FROM signals_log WHERE signal_name='led' ORDER BY timestamp DESC LIMIT 1</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2025-07-03T12:30:53.198842" elapsed="0.023896"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-03T12:30:53.223360" level="INFO">${led_state} = off</msg>
<var>${led_state}</var>
<arg>${result[0][0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-03T12:30:53.222892" elapsed="0.000490"/>
</kw>
<return>
<value>${led_state}</value>
<status status="PASS" start="2025-07-03T12:30:53.223430" elapsed="0.000048"/>
</return>
<msg time="2025-07-03T12:30:53.223603" level="INFO">${led_state} = off</msg>
<var>${led_state}</var>
<doc>Récupère le dernier état de la LED depuis la base</doc>
<status status="PASS" start="2025-07-03T12:30:53.198604" elapsed="0.025018"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${led_state}</arg>
<arg>off</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-03T12:30:53.223890" elapsed="0.000241"/>
</kw>
<doc>Vérifie l'état initial de la LED</doc>
<status status="PASS" start="2025-07-03T12:30:53.198084" elapsed="0.026255"/>
</test>
<test id="s1-t2" name="Test LED Toggle With Button Press" line="20">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2025-07-03T12:30:53.225442" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;INSERT INTO signals_log (signal_name, value, source) VALUES ('button', 'pressed', 'test')&lt;/code&gt;</msg>
<msg time="2025-07-03T12:30:53.250397" level="INFO">Commit the transaction</msg>
<arg>INSERT INTO signals_log (signal_name, value, source) VALUES ('button', 'pressed', 'test')</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2025-07-03T12:30:53.225298" elapsed="0.037684"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-03T12:30:55.264011" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-03T12:30:53.263491" elapsed="2.000635"/>
</kw>
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2025-07-03T12:30:55.264596" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;INSERT INTO signals_log (signal_name, value, source) VALUES ('led', 'on', 'test')&lt;/code&gt;</msg>
<msg time="2025-07-03T12:30:55.279073" level="INFO">Commit the transaction</msg>
<arg>INSERT INTO signals_log (signal_name, value, source) VALUES ('led', 'on', 'test')</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2025-07-03T12:30:55.264482" elapsed="0.030151"/>
</kw>
<kw name="Query LED State From DB" owner="keywords">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2025-07-03T12:30:55.295486" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT value FROM signals_log WHERE signal_name='led' ORDER BY timestamp DESC LIMIT 1&lt;/code&gt;</msg>
<msg time="2025-07-03T12:30:55.309756" level="INFO">Commit the transaction</msg>
<msg time="2025-07-03T12:30:55.322026" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="color:black; background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;value&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: var(--secondary-color, #eee)"&gt;&lt;th scope="row" style="color:black; background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;on&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2025-07-03T12:30:55.322171" level="INFO">${result} = (('on',),)</msg>
<var>${result}</var>
<arg>SELECT value FROM signals_log WHERE signal_name='led' ORDER BY timestamp DESC LIMIT 1</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2025-07-03T12:30:55.295384" elapsed="0.026803"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-03T12:30:55.322621" level="INFO">${led_state} = on</msg>
<var>${led_state}</var>
<arg>${result[0][0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-03T12:30:55.322307" elapsed="0.000329"/>
</kw>
<return>
<value>${led_state}</value>
<status status="PASS" start="2025-07-03T12:30:55.322810" elapsed="0.000044"/>
</return>
<msg time="2025-07-03T12:30:55.322956" level="INFO">${led_state} = on</msg>
<var>${led_state}</var>
<doc>Récupère le dernier état de la LED depuis la base</doc>
<status status="PASS" start="2025-07-03T12:30:55.295172" elapsed="0.027797"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${led_state}</arg>
<arg>on</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-03T12:30:55.323282" elapsed="0.000136"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-03T12:30:55.323649" level="INFO">LED allumée après appui sur le bouton</msg>
<arg>LED allumée après appui sur le bouton</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-03T12:30:55.323581" elapsed="0.000094"/>
</kw>
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2025-07-03T12:30:55.324090" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;INSERT INTO signals_log (signal_name, value, source) VALUES ('button', 'not pressed', 'test')&lt;/code&gt;</msg>
<msg time="2025-07-03T12:30:55.339599" level="INFO">Commit the transaction</msg>
<arg>INSERT INTO signals_log (signal_name, value, source) VALUES ('button', 'not pressed', 'test')</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2025-07-03T12:30:55.323956" elapsed="0.035862"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-03T12:30:57.361205" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-03T12:30:55.360212" elapsed="2.001313"/>
</kw>
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2025-07-03T12:30:57.363009" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;INSERT INTO signals_log (signal_name, value, source) VALUES ('led', 'off', 'test')&lt;/code&gt;</msg>
<msg time="2025-07-03T12:30:57.375868" level="INFO">Commit the transaction</msg>
<arg>INSERT INTO signals_log (signal_name, value, source) VALUES ('led', 'off', 'test')</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2025-07-03T12:30:57.362635" elapsed="0.030230"/>
</kw>
<kw name="Query LED State From DB" owner="keywords">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2025-07-03T12:30:57.394425" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT value FROM signals_log WHERE signal_name='led' ORDER BY timestamp DESC LIMIT 1&lt;/code&gt;</msg>
<msg time="2025-07-03T12:30:57.406721" level="INFO">Commit the transaction</msg>
<msg time="2025-07-03T12:30:57.418242" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="color:black; background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;value&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: var(--secondary-color, #eee)"&gt;&lt;th scope="row" style="color:black; background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;off&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2025-07-03T12:30:57.419218" level="INFO">${result} = (('off',),)</msg>
<var>${result}</var>
<arg>SELECT value FROM signals_log WHERE signal_name='led' ORDER BY timestamp DESC LIMIT 1</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2025-07-03T12:30:57.394290" elapsed="0.024986"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-03T12:30:57.420180" level="INFO">${led_state} = off</msg>
<var>${led_state}</var>
<arg>${result[0][0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-03T12:30:57.419546" elapsed="0.000665"/>
</kw>
<return>
<value>${led_state}</value>
<status status="PASS" start="2025-07-03T12:30:57.420277" elapsed="0.000039"/>
</return>
<msg time="2025-07-03T12:30:57.420448" level="INFO">${led_state} = off</msg>
<var>${led_state}</var>
<doc>Récupère le dernier état de la LED depuis la base</doc>
<status status="PASS" start="2025-07-03T12:30:57.393989" elapsed="0.026483"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${led_state}</arg>
<arg>off</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-03T12:30:57.420930" elapsed="0.000226"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-03T12:30:57.421670" level="INFO">LED éteinte après relâchement du bouton</msg>
<arg>LED éteinte après relâchement du bouton</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-03T12:30:57.421550" elapsed="0.000165"/>
</kw>
<doc>Simule l'appui et le relâchement du bouton poussoir et vérifie l'effet sur la LED</doc>
<status status="PASS" start="2025-07-03T12:30:53.224938" elapsed="4.197155"/>
</test>
<kw name="Disconnect From HMI Database" owner="keywords" type="TEARDOWN">
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2025-07-03T12:30:57.423860" elapsed="0.000286"/>
</kw>
<doc>Déconnexion de la base de données</doc>
<status status="PASS" start="2025-07-03T12:30:57.423697" elapsed="0.000505"/>
</kw>
<status status="PASS" start="2025-07-03T12:30:53.008223" elapsed="4.416001"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Test" id="s1" pass="2" fail="0" skip="0">Test</stat>
</suite>
</statistics>
<errors>
<msg time="2025-07-03T12:30:53.049587" level="WARN">Error in file 'C:\Users\zones\Desktop\KPIT SUMMER\components\robot_tests\test_keywords\keywords.robot' on line 21: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
</errors>
</robot>
